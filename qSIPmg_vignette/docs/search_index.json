[["index.html", "qSIPmg R package vignette Chapter 1 Introduction", " qSIPmg R package vignette Pranav Sampara, Kate Waring, and Ryan Ziels 27/10/2021 Chapter 1 Introduction The qSIPmg R package was designed to enable the exploration and statistical analysis of qSIP metagenomics data. Particularly, this package allows the identification of isotope incorporators and quantifies isotopic enrichment. Please check out this introductory vignette to qSIP metagenomics, before checking out vignettes on: Coverage normalization and scaling based on linear regression model Identification of incorporators based on atom fraction excess method or by multiple hypothesis testing on centroid buoyant densities "],["background.html", "Chapter 2 Background 2.1 Stable isotope probing 2.2 Quantitative metagenomics 2.3 Quantitative SIP (qSIP) 2.4 For details on SIP, quantitative metagenomics, and qSIP, please refer to the following works:", " Chapter 2 Background This section introduces a bit of a background on the methodologies used in this pipeline, such as stable isotope probing, quantitative metagenomics, and quantitative stable isotope probing. References as a point of departure for more reading are also provided. 2.1 Stable isotope probing Stable isotope probing (SIP) targets active populations within complex microbiomes by providing growth substrates enriched in a heavy stable isotope of carbon, nitrogen, or oxygen. In DNA-SIP, the DNA of microbes actively incorporating the labelled substrate into their DNA during cell division and growth would become increasingly labelled and heavier compared to the microbes not incorporating the substrate into their DNA. Heavier DNA can be physically separated via isopycnic centrifugation on a CsCl gradient, followed by fractionation. Sequencing effort on the heavier density fractions could inform the identity and function of microbes that actively incorporated the isotopic substrate into their DNA. Thus, DNA-SIP is a powerful technique to link the identity and function of environmental microbes. However, traditional DNA-SIP is only a qualitative technique to identify active microbial populations and no quantitative estimates of isotopic enrichment of DNA are provided. For instance, the distinction between labelled and unlabelled microbes is defined by density gradient regions, limiting the resolution of taxon-specific responses to labelled or unlabelled. Moreover, there exists a guanine-cytosine (GC) bias in conventional SIP studies. The native buoyant density of DNA can differ by as much as 0.05 g/mL over the range of GC contents that can occur in complex communities. Lighter GC-content genomes may not shift into the researcher-assigned heavier density fractions, while high GC-content genomes may fall in the heavier density fractions without any isotopic substrate assimilation. Thus, a qualitative analysis may mask the true incorporators and, worse, falsely identify non-incorporators as incorporators, skewing the analysis of the study. 2.2 Quantitative metagenomics Although metagenomics offers a comprehensive account of the metabolic repertoire in an environment, typically, the data is compositional. Relative abundance of genes or taxa is estimated to determine microbial community dynamics, which is directly influenced by the dynamics of rest of the community. Even if a certain gene remains in the same concentration, its relative abundance changes if a certain other gene increases/decreases in concentration. Absolute abundance of gene/genome can be critical, for instance, in the surveillance of a pathogenic gene/genome in an environment. For quantitative measurements of microbial taxon absolute abundance in a given metagenomic sample, Hardwick et al. (2018) proposed synthetic spike-ins, or sequins, as internal reference standards. Reference standards in metagenomics can act as scaling factors to evaluate quantitative estimates of individual biological features, in this case, genes or genomes. 2.3 Quantitative SIP (qSIP) In quantitative SIP (qSIP), quantitative estimates of isotope incorporation expressed as atom fraction excess (AFE) which quantifies isotopic enrichment based on a mathematical model. Quantitative estimates of isotopic enrichment of DNA facilitate accurate and sensitive estimates of substrate uptake measurements, and growth and mortality rates of individual taxa in a complex community. Moreover, qSIP analysis is less susceptible to GC and enrichment biases, and taxon abundance, making it amenable to quantify isotopic incorporations in a complex community such as the activated sludge microbiome, with in-situ conditions. Integration of qSIP and quantitative metagenomics (qSIP metagenomics) facilitates the exploration of active microbial populations taxonomic and metabolic diversity with a quantitative estimate of their abundance and isotope incorporation. 2.4 For details on SIP, quantitative metagenomics, and qSIP, please refer to the following works: 2.4.1 SIP Neufeld, Josh D., Jyotsna Vohra, Marc G. Dumont, Tillmann Lueders, Mike Manefield, Michael W. Friedrich, and J. Colin Murrell. 2007. DNA Stable-Isotope Probing. Nature Protocols 2 (4): 86066. Neufeld JD, Dumont MG, Vohra J, Murrell JC. Methodological considerations for the use of stable isotope probing in microbial ecology. Microbial Ecology 2007; 53: 435442. Buckley DH, Huangyutitham V, Hsu S-F, Nelson TA. Stable isotope probing with 15N achieved by disentangling the effects of genome G+ C content and isotope enrichment on DNA density. Applied and environmental microbiology 2007; 73: 31893195. 2.4.2 Quantitative metagenomics Hardwick SA, Chen WY, Wong T, Kanakamedala BS, Deveson IW, Ongley SE, et al. Synthetic microbe communities provide internal reference standards for metagenome sequencing and analysis. Nature Communications 2018; 9: 3096. 2.4.3 qSIP Hungate BA, Mau RL, Schwartz E, Caporaso JG, Dijkstra P, Gestel N van, et al. Quantitative Microbial Ecology through Stable Isotope Probing. Appl Environ Microbiol 2015; 81: 75707581. Sieradzki ET, Koch BJ, Greenlon A, Sachdeva R, Malmstrom RR, Mau RL, et al. Measurement error and resolution in quantitative stable isotope probing: implications for experimental design. Msystems 2020; 5: e00151-20. 2.4.4 HTSSIP R package Youngblut ND, Barnett SE, Buckley DH. HTSSIP: An R package for analysis of high throughput sequencing data from nucleic acid stable isotope probing (SIP) experiments. PLOS ONE 2018; 13: e0189616. "],["using-qsipmg-r-package.html", "Chapter 3 Using qSIPmg R package 3.1 Example workflow 3.2 Load required data 3.3 Coverage normalization and scaling 3.4 Preparation of scaled data for qSIP analysis 3.5 Estimation of atom fraction excess 3.6 Plot the atom fraction excess plot 3.7 Check incorporator list 3.8 Workflow to view abundance vs BD plots of incorporators 3.9 Session information", " Chapter 3 Using qSIPmg R package This R package was designed to facilitate statistical analyses using qSIP metagenomic data. Particularly, coverage and taxonomic classification of metagenome-assembled genomes and metadata of fractionated DNA is used to identify incorporators and quantify isotopic enrichment. Overall, the package can perform the following: Coverage normalization and scaling based on internal reference standards to calculate genome (or feature of interest) concentration. Statistical analysis based on either of AFE mathematical model by Hungate et al. (2015) or Multiple hypothesis testing for shifts in centroid buoyant density. Data visualization for identification of isotope incorporators. 3.1 Example workflow qSIP analysis using sequins, MAG coverage, and MAG taxonomy is performed using this R markdown. Briefly, coverages are normalized, MAG coverages are then scaled based on linear regression models from sequin coverage and concentrations, a phyloseq object is created from MAG absolute concentrations and taxonomy (GTDB taxonomy output format is required) data. Note: Sequins that were spiked in the DNA-SIP fractions will be used in scaling and creating linear regression models for evaluating absolute MAG concentrations. Please see sequin_scaling.R For normalizing coverage values please see pooling_funs.R This R markdown primarily uses Tidyverse, phyloseq, and HTSSIP packages This markdown uses functions from functions_qSIP_MAGs.R Data for this example is here. For this data, MetaSIPSim (developed by Barnett et al, 2020) was used to simulate a data set from a hypothetical SIP workflow performed on the MBARC-26 mock community (as defined in Singer et al, 2016). The data set was further augmented with simulated post-fractionation sequin spike-ins and the data set was simulated to have all 26 organisms as incorporators. Some of the 26 organisms also had plasmids, which were assembled as distinct genomic units, adding the total genomic features in the simulated study to be 38 #Load required libraries library(tidyverse) library(phyloseq) library(HTSSIP) library(data.table) library(ggpubr) library(qSIPmg) set.seed(seed = 1000) 3.2 Load required data The following files are required: 3.2.1 MAG coverage data Pooled coverages data as a comma separated file (.csv file) across samples for Features including sequins that were used as spike-ins. The followings columns are required: Feature: A character string describing the Feature label Sample: The label for these n number of columns should be in the format of isotope_rep_#_fraction_#. For instance, 12C_rep_1_fraction_1. The number of sample columns should be the same as the product of (replicates, fractions, isotopes) 3.2.2 Sequin metadata Load the sequins metadata as a comma separated file (.csv file) which has the following columns: Feature: As described above Length: Length of the sequin in bp GC_content: GC content of the sequin Sequence: Sequin nucleotide sequence Concentration: Concentration of the sequin in attamoles/uL 3.2.3 Dilutions data Load dilutions data as a comma separated file (.csv file) that contains the following columns Sample: Similar to the sample name as described above. Dilution: Dilution of sequins added to the fraction before sequencing. 3.2.4 Fractions metadata A fractions file as a comma separated file (.csv file) with the following columns: Replicate: Depends on how many replicates the study has Fractions: Typically in the range of 1-24 Buoyant_density: As calculated from the refractometer for each fraction and replicate Isotope - 12C, 13C, 14N, 15N etc. DNA_concentration Sample - In the format isotope_rep_#_fraction_#. For instance 12C_rep_1_fraction_1 3.2.5 GTDB style taxonomy data A taxonomy file in the GTDB output format (.tsv format). Load the bacteria and archaea taxonomy outputs separately. The markdown requires loading the standard output files from GTDB-Tk separately for bacteria and archaea 3.2.6 MAG absolute concentrations MAG absolute concentrations obtained from scaling_sequins.R. mag_tab object obtained from the above script is to be used as the input here 3.2.7 GC content GC content of the MAGs as a comma separated file (.csv file). The table should contain the following columns: OTU: MAG identifier such as the Feature label from the sequin_scaling.R script GC_content: GC content of the Feature in the range of 0-1 3.2.8 Log scale BOOLEAN True or False depending on how you would want the MAG coverages to be scaled. Select TRUE if you need MAG concentrations scaled on the log scale 3.2.9 Coefficient of variation Acceptable coefficient of variation for coverage and detection (eg. 20 for 20 % threshold of coefficient of variation) Coverages above the threshold value will be flagged in the plots. Here a value of 20 is used. ## Load data #Coverage metadata #Uncomment if your coverage data is in the format mentioned above for this file. Remains commented if you are using the output from `checkm coverage` f_tibble &lt;- read_csv(&quot;mock_input_data/coverage_metadata.csv&quot;) #Sequins metadata sequins &lt;- read_csv(file=&quot;mock_input_data/sequins_metadata.csv&quot;) #Dilutions data seq_dil = read_csv(file = &quot;mock_input_data/dilutions_data.csv&quot;) #Log scale BOOLEAN. True or False depending on how you would want the MAG coverages to be scaled. Select TRUE if you need MAG concentrations scaled on the log scale log_scale = TRUE #coe_of_variation. Acceptable coefficient of variation for coverage and detection (eg. 20 - for 20 % threshold of coefficient of variation) (Coverages above the threshold value will be flagged in the plots) coe_of_variation = 20 #Taxonomy gtdbtk_bac_summary = read_delim(&quot;mock_input_data/gtdbtk.bac120.summary.tsv&quot;, &quot;\\t&quot;, escape_double = FALSE, trim_ws = TRUE) gtdbtk_archaea = read_delim(&quot;mock_input_data/gtdbtk.ar122.summary.tsv&quot;, &quot;\\t&quot;, escape_double = FALSE, trim_ws = TRUE) #GC content GC_content &lt;- read_csv(file = &quot;mock_input_data/GC_content.csv&quot;) #Fractions fractions = read_csv(&quot;mock_input_data/fractions.csv&quot;) 3.3 Coverage normalization and scaling Coverage data of MAGs (or features of interest) and sequins is scaled using sequin concentration to obtain absolute concentration of MAGs (or features of interest). For this step, either linear regression or robust linear regression can be used. If linear regression is used, the function scale_features_lm is used. The functions in sequin_scaling_lm.R are used for this step. If robust linear regression is used, the outliers impact on the regression models is minimized. For robust linear regression, scale_features_rlm is used. The functions in sequin_scaling_rlm.R are used for this step. In this example workflow, robust linear regression is used to scale coverage data in log10 scale. For more discussion on the coice of regression method and comparison of the two methods please see this vignette 3.3.1 This function uses the following datasets: Coverage data (f_tibble) Sequins metadata (sequins) Dilution of sequins used to add into the fractions (seq_dil) The regression scaling plots are saved in the project folder within a subfolder sequin_scaling_plots taxonomy_tibble = rbind(gtdbtk_bac_summary, gtdbtk_archaea) #Combine bacteria and archaea taxonomy files if it has not been done yet #mag_tab is a tibble with absolute concentrations of MAGs obtained by scaling MAG coverages using linear regression models on sequin coverages and concentration ##Scale MAG coverages to obtain MAG absolute concentrations and save scaling plots in the working directory #For rlm scaling using scale_features_rlm #For rlm scaling using scale_features_lm mag_tab_scaled &lt;- scale_features_rlm(f_tibble, sequins, seq_dil, log_scale, coe_of_variation = coe_of_variation) mag_tab = as.matrix(mag_tab_scaled$mag_tab) #Extract absolute abundances as a matrix 3.3.1.1 Example of a scaling plot An example of a scaling plot is as below 3.4 Preparation of scaled data for qSIP analysis The scaled abundance data, taxonomy data, and metadata is then converted to phyloseq objects and a master phyloseq object is created for qSIP analysis. mag.table = phyloseq::otu_table(mag_tab, taxa_are_rows = TRUE) #Phyloseq OTU table taxonomy.object = tax.table(taxonomy_tibble) # Create a taxonomy phyloseq object samples.object = sample.table(fractions) # Create a samples phyloseq object phylo.qSIP = phylo.table(mag.table, taxonomy.object, samples.object) # Make a phyloseq table for downstream qSIP analysis 3.5 Estimation of atom fraction excess THe following steps estimate the atom fraction excess (AFE) in the MAGs. This calculation is based on the mathematical model suggested by Hungate et al. (2015). In the article, the authors suggest that GC contents of the individual biological features of interest should be accounted for to have a better estimate of AFE. Through the power of metagenomic analysis and the recovery of MAGs, one can estimate the GC content of features of interest and thereby obtain a better estimate of AFE. Thus, here the user would use the GC contents of MAGs in the AFE estimations and obtain isotopic enrichment of individual MAGs. An important consideration is that the AFE calculations are based on a mathematical model and are not an absolute estimate of isotopic enrichment. One of the goals of AFE estimation is to determine isotope incorporators. Another way to determine incorporators is by comparing the centroid buoyant density. A statistically significant shift in centroid buoyant density between the unlabeled and labeled organism implies isotope incorporation. For this method, please see this vignette which discusses multiple hypothesis testing, statistical analysis for determination of isotope incorporators, and a comparison of the two methods. In this example workflow, the approach reported in Hungate et al. (2015) is used to determine incorporators. For this step, the following are used: Master phyloseq object from the previous step GC content Thanks to HTSSIP R package, bootstrapping can be performed faster with multithreading. atomX = qSIP_atom_excess_MAGs(phylo.qSIP, control_expr=&#39;Isotope==&quot;12C&quot;&#39;, treatment_rep=&#39;Replicate&#39;, Gi = GC_content) #Bootstrap confidence intervals df_atomX_boot = qSIP_bootstrap(atomX, n_boot=100, parallel = TRUE) #Change &quot;parallel = FALSE&quot; to compute using a single-core 3.6 Plot the atom fraction excess plot Plot the atom fraction excess data with 5 % and 95 % quantiles as the confidence limits. In the same way as reported in Hungate et al. (2015), a MAG is considered an incorporator if the lower confidence interval of its AFE is above zero. CI_threshold = 0 df_atomX_boot = df_atomX_boot %&gt;% mutate(Incorporator = A_CI_low &gt; CI_threshold, OTU = reorder(OTU, -A)) (atom_f_excess_plot = ggplot(df_atomX_boot, aes(OTU, A, ymin=A_CI_low, ymax=A_CI_high, color=Incorporator)) + geom_pointrange(size=0.25) + geom_linerange() + geom_hline(yintercept=0, linetype=&#39;dashed&#39;, alpha=0.5) + labs(x=&#39;MAGs&#39;, y=&#39;Atom fraction excess&#39;) + theme_bw() + coord_flip() + ggtitle(&quot;Isotope incorporating MAGs&quot;)) ggsave(filename = &quot;atom_fration_excess.pdf&quot;, plot = atom_f_excess_plot) 3.7 Check incorporator list #Get incorporator info n_incorp = df_atomX_boot %&gt;% filter(Incorporator == TRUE) %&gt;% nrow #Get incorporator list incorporator_list = incorporators_taxonomy(taxonomy = taxonomy_tibble, bootstrapped_AFE_table = df_atomX_boot) #Print incorporator information cat(&#39;Number of incorporators:&#39;, n_incorp, &#39;\\n&#39;) ## Number of incorporators: 25 print(incorporator_list, n = nrow(incorporator_list)) ## # A tibble: 25 x 2 ## OTU taxonomy ## &lt;fct&gt; &lt;chr&gt; ## 1 NC_000913.3 Terriglobusroseus ## 2 NC_003450.3 Segniliparusrotundus ## 3 NC_008261.1 Nocardiopsisdassonvillei ## 4 NC_010067.1 Olsenellauli ## 5 NC_014008.1 Meiothermus_Bsilvanus ## 6 NC_014168.1 Meiothermus_Bsilvanus ## 7 NC_014210.1 Hungateiclostridiumthermocellum ## 8 NC_014211.1 Clostridium_Pperfringens ## 9 NC_014212.1 Desulfosporosinusacidiphilus ## 10 NC_014213.1 Desulfosporosinusacidiphilus ## 11 NC_014214.1 Desulfosporosinusacidiphilus ## 12 NC_014363.1 Desulfosporosinusmeridiei ## 13 NC_015761.1 Streptococcuspyogenes ## 14 NC_017033.1 Thermobacilluscomposti ## 15 NC_018014.1 Hirschiabaltica ## 16 NC_019792.1 Pseudomonas_Astutzeri_AE ## 17 NC_019897.1 Pseudomonas_Astutzeri_AE ## 18 NC_019936.1 Frateuriaaurantia ## 19 NC_019937.1 Sediminispirochaetasmaragdinae ## 20 NC_019938.1 Fervidobacteriumpennivorans ## 21 NC_019939.1 Coraliomargaritaakajimensis ## 22 NC_019964.1 Halovivaxruber ## 23 NC_019974.1 Natronobacteriumgregoryi ## 24 NC_019975.1 Natronococcusoccultus ## 25 NC_019976.1 Natronococcusoccultus 3.8 Workflow to view abundance vs BD plots of incorporators This is an optional workflow that outputs a data table for easy visualization of plots, such as buoyant density vs absolute abundance for the incorporators. To obtain the data table, the following parameters are required: fractions - The same fractions metadata file as loaded previously mag_tab - MAG abundance estimates calculated from the sequin_scaling.R function df_atomx_boot - Bootstrapped AFE table from the functions_qSIP_MAGs.R function #Load function for abundance plots data_vis_table = sip_vis(fractions = fractions, mag_tab = mag_tab, afe_tab = df_atomX_boot, taxonomy = taxonomy_tibble) (plot_bd = ggplot(data_vis_table, aes(x = buoyant_density, y = normalized_abundance, shape = replicate, color = isotope)) + geom_point() + #scale_alpha_discrete(range = c(1,0.4)) + scale_color_manual(values=c(&quot;gold&quot;, &quot;deepskyblue2&quot;)) + geom_line() + theme_bw() + xlab(&quot;Buoyant density (g/mL)&quot;) + ylab(&quot;Normalized abundance (attaM)&quot;) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + #scale_x_continuous(breaks = x_ticks, limits = c(1.69, 1.73)) + facet_wrap(~taxonomy, ncol = 4)) # Comparison of centroid buoyant densities of labeled and unlabeled MAGs (ggplot(data_vis_table %&gt;% group_by(feature, isotope) %&gt;% mutate(centroid_BD = weighted.mean(x = buoyant_density, w = absolute_abundance)) , aes(isotope, centroid_BD, fill = isotope)) + geom_boxplot() + theme_bw() + facet_wrap(~taxonomy, ncol = 4)) 3.9 Session information sessionInfo() ## R version 4.0.3 (2020-10-10) ## Platform: x86_64-w64-mingw32/x64 (64-bit) ## Running under: Windows 10 x64 (build 19042) ## ## Matrix products: default ## ## locale: ## [1] LC_COLLATE=English_Canada.1252 LC_CTYPE=English_Canada.1252 ## [3] LC_MONETARY=English_Canada.1252 LC_NUMERIC=C ## [5] LC_TIME=English_Canada.1252 ## ## attached base packages: ## [1] stats graphics grDevices utils datasets methods base ## ## other attached packages: ## [1] qSIPmg_0.3.0 ggpubr_0.4.0 data.table_1.14.2 HTSSIP_1.4.1 ## [5] phyloseq_1.34.0 forcats_0.5.1 stringr_1.4.0 dplyr_1.0.7 ## [9] purrr_0.3.4 readr_2.0.2 tidyr_1.1.4 tibble_3.1.5 ## [13] ggplot2_3.3.5 tidyverse_1.3.1 ## ## loaded via a namespace (and not attached): ## [1] colorspace_2.0-2 ggsignif_0.6.3 ellipsis_0.3.2 ## [4] rio_0.5.27 XVector_0.30.0 fs_1.5.0 ## [7] rstudioapi_0.13 farver_2.1.0 bit64_4.0.5 ## [10] fansi_0.5.0 lubridate_1.8.0 xml2_1.3.2 ## [13] codetools_0.2-18 splines_4.0.3 knitr_1.36 ## [16] ade4_1.7-18 polynom_1.4-0 jsonlite_1.7.2 ## [19] broom_0.7.9 cluster_2.1.2 dbplyr_2.1.1 ## [22] compiler_4.0.3 httr_1.4.2 backports_1.2.1 ## [25] lazyeval_0.2.2 assertthat_0.2.1 Matrix_1.3-4 ## [28] fastmap_1.1.0 cli_3.0.1 htmltools_0.5.2 ## [31] tools_4.0.3 igraph_1.2.7 gtable_0.3.0 ## [34] glue_1.4.2 reshape2_1.4.4 Rcpp_1.0.5 ## [37] carData_3.0-4 Biobase_2.50.0 cellranger_1.1.0 ## [40] jquerylib_0.1.4 vctrs_0.3.8 Biostrings_2.58.0 ## [43] rhdf5filters_1.2.0 multtest_2.46.0 ape_5.5 ## [46] nlme_3.1-153 iterators_1.0.13 xfun_0.27 ## [49] openxlsx_4.2.4 rvest_1.0.2 lifecycle_1.0.1 ## [52] rstatix_0.7.0 zlibbioc_1.36.0 MASS_7.3-53 ## [55] scales_1.1.1 vroom_1.5.5 hms_1.1.1 ## [58] parallel_4.0.3 biomformat_1.18.0 rhdf5_2.34.0 ## [61] yaml_2.2.1 curl_4.3.2 sass_0.4.0 ## [64] stringi_1.5.3 highr_0.9 S4Vectors_0.28.0 ## [67] foreach_1.5.1 permute_0.9-5 BiocGenerics_0.36.1 ## [70] zip_2.2.0 rlang_0.4.10 pkgconfig_2.0.3 ## [73] evaluate_0.14 lattice_0.20-45 Rhdf5lib_1.12.0 ## [76] labeling_0.4.2 bit_4.0.4 tidyselect_1.1.1 ## [79] plyr_1.8.6 magrittr_2.0.1 bookdown_0.24 ## [82] R6_2.5.1 IRanges_2.24.0 generics_0.1.1 ## [85] DBI_1.1.1 pillar_1.6.4 haven_2.4.3 ## [88] foreign_0.8-81 withr_2.4.2 mgcv_1.8-38 ## [91] survival_3.2-13 abind_1.4-5 modelr_0.1.8 ## [94] crayon_1.4.1 car_3.0-11 fdrtool_1.2.16 ## [97] utf8_1.2.2 tzdb_0.1.2 rmarkdown_2.11 ## [100] grid_4.0.3 readxl_1.3.1 vegan_2.5-7 ## [103] reprex_2.0.1 digest_0.6.27 stats4_4.0.3 ## [106] munsell_0.5.0 bslib_0.3.1 "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
